<?php

/**
 * @file
 * Install, update, and uninstall updates functions for the HIT Page.
 */

/**
 * Implements hook_schema().
 */
function scf_hit_page_schema()
{ 
 

    $schema['scf_hit_page_leadership_ordering'] = array(
      'description' => 'HIT Leadership Videos Ordering.',
      'fields' => array(
        'nid' => array(
          'description' => 'The node id',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'weight' => array(
          'description' => 'The ordering of content.',
          'type' => 'int',
          'unsigned' => FALSE,
          'not null' => TRUE,
        ),
        'status' => array(
          'description' => 'published or un-published',
          'type' => 'int',
          'unsigned' => TRUE,
        ),
      ),
      'primary key' => array('nid'),
    );
 



    $schema['scf_hit_page_impact_ordering'] = array(
      'description' => 'HIT Impact Stories Ordering.',
      'fields' => array(
        'nid' => array(
          'description' => 'The node id',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'weight' => array(
          'description' => 'The ordering of content.',
          'type' => 'int',
          'unsigned' => FALSE,
          'not null' => TRUE,
        ),
        'status' => array(
          'description' => 'published or un-published',
          'type' => 'int',
          'unsigned' => TRUE,
        ),
      ),
      'primary key' => array('nid'),
    );


    $schema['scf_hit_team_ordering'] = array(
      'description' => 'HIT Team ordering.',
      'fields' => array(
        'id' => array(
          'description' => 'The primary identifier core team.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'nid' => array(
          'description' => 'The node id',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'weight' => array(
          'description' => 'The ordering of content.',
          'type' => 'int',
          'unsigned' => FALSE,
          'not null' => TRUE,
        ),
        'key_contact' => array(
          'description' => 'Key contact(1) or Core Team(0)',
          'type' => 'int',
          'unsigned' => TRUE,
        ),
      ),
      'primary key' => array('id'),
      'indexes' => array('coreteam' => array('nid')),
    );


  return $schema;
}

// /**
//  * Implements hook_install().
//  */
// function scf_hit_page_install()
// {
//   drupal_set_installed_schema_version('scf_hit_page', '7000');
// }

// /**
//  * Create table scf_hit_page_leadership_ordering
//  * Implements hook_update_N().
//  */
// function scf_hit_page_update_7001(&$sandox)
// {
//   if (!db_table_exists('scf_hit_page_leadership_ordering')) {
//     try {
//       $schema = drupal_get_schema_unprocessed('scf_hit_page');
//       db_create_table('scf_hit_page_leadership_ordering', $schema['scf_hit_page_leadership_ordering']);
//     } catch (Exception $e) {
//       throw new DrupalUpdateException('Unable to create scf_hit_page_leadership_ordering table.');
//     }
//   }
// }

// /**
//  * Create table scf_hit_page_impact_ordering
//  * Implements hook_update_N().
//  */
// function scf_hit_page_update_7002(&$sandox)
// {
//   if (!db_table_exists('scf_hit_page_impact_ordering')) {
//     try {
//       $schema = drupal_get_schema_unprocessed('scf_hit_page');
//       db_create_table('scf_hit_page_impact_ordering', $schema['scf_hit_page_impact_ordering']);
//     } catch (Exception $e) {
//       throw new DrupalUpdateException('Unable to create scf_hit_page_impact_ordering table.');
//     }
//   }
// }
